name: Python Unit Tests and Docs

on:
  push:
    branches: [ main, testing ]
  pull_request:
    branches: [ main, testing ]

jobs:
  test_and_docs:
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: '3.10'

    - name: Set up Conda environment
      uses: conda-incubator/setup-miniconda@v3
      with:
        environment-file: environment.yml
        activate-environment: photosift
        auto-activate: false

    - name: Discover and run tests
      run: |
        python -m unittest discover -s tests -p "*_test.py"

    - name: Install Sphinx and autodoc
      run: |
        pip install sphinx sphinx-autodoc-typehints

    - name: Ensure docs/conf.py exists
      run: |
        if [ ! -f docs/conf.py ]; then
          rm -rf docs
          sphinx-quickstart docs -q --project "PhotoSIFT" --author "Group11" --ext-autodoc
        fi

    - name: Generate API docs from project root
      run: |
        sphinx-apidoc -o docs . --force --no-toc --separate

    - name: Add members to all .rst files
      run: |
        for f in docs/*.rst; do
          mod=$(basename "$f" .rst)
          echo -e "\n.. automodule:: $mod\n   :members:\n   :undoc-members:\n   :show-inheritance:\n" >> "$f"
        done

    - name: Update index.rst with toctree
      run: |
        echo "PhotoSIFT API Documentation\n===========================\n\n.. toctree::\n   :maxdepth: 2\n   :caption: Modules\n" > docs/index.rst
        for f in docs/*.rst; do
          base=$(basename "$f" .rst)
          if [ "$base" != "index" ]; then
            echo "   $base" >> docs/index.rst
          fi
        done

    - name: Build HTML docs
      run: |
        cd docs
        sphinx-build -b html . _build

    - name: Deploy docs to GitHub Pages
      uses: peaceiris/actions-gh-pages@v4
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
        publish_dir: docs/_build